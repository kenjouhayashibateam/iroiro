<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddComplete" xml:space="preserve">
    <value>登録しました</value>
  </data>
  <data name="AddCompleteTitle" xml:space="preserve">
    <value>登録完了</value>
  </data>
  <data name="AddHomeString" xml:space="preserve">
    <value> 家</value>
  </data>
  <data name="AddresseeErrorInfo" xml:space="preserve">
    <value>宛先が不十分です</value>
  </data>
  <data name="AddressLengthOverInfo" xml:space="preserve">
    <value>住所がセルからはみ出てますので、書き直して下さい</value>
  </data>
  <data name="AreaFieldError" xml:space="preserve">
    <value>面積が正しく入力されていません</value>
  </data>
  <data name="Cho3EnvelopeText" xml:space="preserve">
    <value>長3封筒</value>
  </data>
  <data name="ClipBoardDataErrorInfo" xml:space="preserve">
    <value>コピー形式が正しくありません。</value>
  </data>
  <data name="CompleteDeleteInfo" xml:space="preserve">
    <value>削除しました</value>
  </data>
  <data name="CompleteDeleteInfoTitle" xml:space="preserve">
    <value>削除完了</value>
  </data>
  <data name="ConfirmationRegisterInfo" xml:space="preserve">
    <value>登録しますか？</value>
  </data>
  <data name="ConfirmationRegisterInfoTitle" xml:space="preserve">
    <value>登録確認</value>
  </data>
  <data name="CustomerIDLengthError" xml:space="preserve">
    <value>6桁の管理番号を入力</value>
  </data>
  <data name="DataSelectInfo" xml:space="preserve">
    <value>どちらのデータを使用しますか？</value>
  </data>
  <data name="DataSelectInfoTitle" xml:space="preserve">
    <value>データ選択</value>
  </data>
  <data name="DefaultDate" xml:space="preserve">
    <value>1900/01/01</value>
  </data>
  <data name="DeleteInfo" xml:space="preserve">
    <value>削除しますか？</value>
  </data>
  <data name="DeleteInfoTitle" xml:space="preserve">
    <value>削除確認</value>
  </data>
  <data name="ErrorRegisterTitle" xml:space="preserve">
    <value>登録エラー</value>
  </data>
  <data name="FieldPropertyMessage.Area" xml:space="preserve">
    <value>面積 : </value>
  </data>
  <data name="FieldPropertyMessage.ContractContent" xml:space="preserve">
    <value>契約内容 : </value>
  </data>
  <data name="FieldPropertyMessage.CustomerID" xml:space="preserve">
    <value>管理番号 : </value>
  </data>
  <data name="FieldPropertyMessage.FirstName" xml:space="preserve">
    <value>苗字 : </value>
  </data>
  <data name="FieldPropertyMessage.GraveNumber" xml:space="preserve">
    <value>墓地番号 : </value>
  </data>
  <data name="FieldPropertyMessage.RegistrationDate" xml:space="preserve">
    <value>登録日時 : </value>
  </data>
  <data name="FieldPropertyMessage_Lessee" xml:space="preserve">
    <value>名義人 : </value>
  </data>
  <data name="FieldPropertyMessage_Receiver" xml:space="preserve">
    <value>送付先 : </value>
  </data>
  <data name="FormatErrorTitle" xml:space="preserve">
    <value>形式エラー</value>
  </data>
  <data name="GraveBanString" xml:space="preserve">
    <value>番</value>
  </data>
  <data name="GraveGawaString" xml:space="preserve">
    <value>側</value>
  </data>
  <data name="GraveKuString" xml:space="preserve">
    <value>区</value>
  </data>
  <data name="GravePamphletEnvelopeText" xml:space="preserve">
    <value>墓地パンフ</value>
  </data>
  <data name="HonorificsText" xml:space="preserve">
    <value>様</value>
  </data>
  <data name="Kaku2EnvelopeText" xml:space="preserve">
    <value>角2封筒</value>
  </data>
  <data name="LabelPaperText" xml:space="preserve">
    <value>ラベル用紙</value>
  </data>
  <data name="LesseeDataSelect" xml:space="preserve">
    <value>はい ⇒　名義人　　いいえ ⇒ 送付先</value>
  </data>
  <data name="MandatoryItemsNotPreparedTitle" xml:space="preserve">
    <value>必須項目不備</value>
  </data>
  <data name="MoneyInputError" xml:space="preserve">
    <value>金額は半角数字で入力してください</value>
  </data>
  <data name="NoAddressItemCloseInfo" xml:space="preserve">
    <value>アイテムが選択されないまま画面を閉じます。</value>
  </data>
  <data name="NothingSelectedItemMessage" xml:space="preserve">
    <value>アイテムが選択されていません</value>
  </data>
  <data name="OutputInfo" xml:space="preserve">
    <value>チェックの入った墓地札データをエクセルに出力しました</value>
  </data>
  <data name="OutputInfoTitle" xml:space="preserve">
    <value>出力結果</value>
  </data>
  <data name="OutputInfo_Count0" xml:space="preserve">
    <value>印刷するアイテムがありません。印刷フラグにチェックを入れるか、墓地札を追加してください</value>
  </data>
  <data name="PassAddresseeRecordInfo" xml:space="preserve">
    <value>宛名、郵便番号、住所、番地の順で作ったリストをコピーしてください。次のレコードに進みます。</value>
  </data>
  <data name="PostalCodeError" xml:space="preserve">
    <value>半角数字、ハイフンあり（***-****）で入力してください</value>
  </data>
  <data name="PostcardText" xml:space="preserve">
    <value>はがき</value>
  </data>
  <data name="SlashClipSpace" xml:space="preserve">
    <value> / </value>
  </data>
  <data name="SquareFootageText" xml:space="preserve">
    <value> ㎡</value>
  </data>
  <data name="StringEmptyMessage" xml:space="preserve">
    <value>必須項目です。必ず入力してください</value>
  </data>
  <data name="ToBeAdjusted" xml:space="preserve">
    <value>要住所調整</value>
  </data>
  <data name="TransferPaperText" xml:space="preserve">
    <value>振込用紙</value>
  </data>
  <data name="UndefinedCustomerID" xml:space="preserve">
    <value>未登録</value>
  </data>
  <data name="WesternEnvelopeText" xml:space="preserve">
    <value>洋封筒</value>
  </data>
</root>