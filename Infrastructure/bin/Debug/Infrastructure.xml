<?xml version="1.0"?>
<doc>
<assembly>
<name>
Infrastructure
</name>
</assembly>
<members>
<member name="T:Infrastructure.My.Resources.Resources">
<summary>
  ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.ResourceManager">
<summary>
  このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.Culture">
<summary>
  すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
  現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.CleaningContract">
<summary>
  清掃契約 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.DiscardString">
<summary>
  放棄 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.EightString">
<summary>
  八 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.ExcelApp">
<summary>
  Excel.Application に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.FILENAME">
<summary>
  Iroiro に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.FiveString">
<summary>
  五 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.FontName_HGPGyoushotai">
<summary>
  HGP行書体 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.FontName_MSPGothic">
<summary>
  ＭＳ Ｐゴシック に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.FontName_MSPMintyo">
<summary>
  ＭＳ Ｐ明朝 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.FourString">
<summary>
  四 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.FullWidthClosingParenthesis">
<summary>
  （ に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.FuString">
<summary>
  府 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.Gawa">
<summary>
  Gawa に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.GraveNumber">
<summary>
  GraveNumber に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.GunString">
<summary>
  郡 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.HGRegularRegularScriptPRO">
<summary>
  HG正楷書体-PRO に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.KanagawaString">
<summary>
  神奈川県 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.KenString">
<summary>
  県 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.LastSaveDate">
<summary>
  LastSaveDate に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.LesseeName">
<summary>
  LesseeName に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.LogFilePath">
<summary>
  ./logs/ExceptionLogs.txt に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.ManagementNumber">
<summary>
  ManagementNumber に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.NineString">
<summary>
  九 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.OneString">
<summary>
  一 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.SAVEPATH">
<summary>
  .\files\IroiroFile.xlsx に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.SevenString">
<summary>
  七 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.ShiString">
<summary>
  市 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.SixString">
<summary>
  六 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.SquareFootageText">
<summary>
  ㎡ に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.StoredProc_Call_ShunjyuenData">
<summary>
  Call_ShunjyuenData に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.StoredProc_DeleteGravePanel">
<summary>
  DeleteGravePanel に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.StoredProc_GetAddress">
<summary>
  GetAddress に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.StoredProc_GetGravePanelList">
<summary>
  GetGravePanelList に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.StoredProc_GetLastSaveDate">
<summary>
  GetLastSaveDate に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.StoredProc_GetPostalcode">
<summary>
  GetPostalcode に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.StoredProc_Reference_GraveNumber">
<summary>
  Reference_GraveNumber に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.StoredProc_RegistrationGravePanel">
<summary>
  RegistrationGravePanel に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.StoredProc_UpdateGravePanel">
<summary>
  UpdateGravePanel に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.StringHalfHyphen">
<summary>
  - に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.TenString">
<summary>
  十 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.ThreeString">
<summary>
  三 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.TokushimaString">
<summary>
  徳島県 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.ToukyouString">
<summary>
  東京都 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.TowString">
<summary>
  二 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.WildCard_Percent">
<summary>
  % に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:Infrastructure.My.Resources.Resources.ZeroString">
<summary>
  〇 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="T:Infrastructure.IAddressConvert">
 <summary>
 住所を宛先用に変換します
 </summary>
</member>
<member name="M:Infrastructure.IAddressConvert.GetConvertAddress1">
 <summary>
 宛先用住所1を返します
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.IAddressConvert.GetConvertAddress2">
 <summary>
 宛先用住所2を返します
 </summary>
 <returns></returns>
</member>
<member name="T:Infrastructure.IExcelOutputBehavior">
 <summary>
 エクセルに出力する際の共通動作
 </summary>
</member>
<member name="M:Infrastructure.IExcelOutputBehavior.SetCellFont">
 <summary>
 シート全体のフォントを設定します
 </summary>
</member>
<member name="M:Infrastructure.IExcelOutputBehavior.CellProperty(System.Int32)">
 <summary>
 セルのフォントサイズ、フォントポジション等を設定します
 </summary>
 <param name="startrowposition"></param>
</member>
<member name="M:Infrastructure.IExcelOutputBehavior.SetColumnSizes">
 <summary>
 カラムのサイズを格納した配列を返します
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.IExcelOutputBehavior.SetRowSizes">
 <summary>
 Rowのサイズを格納した配列を返します
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.IExcelOutputBehavior.GetDataName">
 <summary>
 エクセルに出力するジャンルを返します
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.IExcelOutputBehavior.SetPrintAreaString">
 <summary>
 印刷範囲の文字列を返します
 </summary>
 <returns></returns>
</member>
<member name="T:Infrastructure.IHorizontalOutputBehavior">
 <summary>
 データを横向けに出力
 </summary>
</member>
<member name="M:Infrastructure.IHorizontalOutputBehavior.SetData(Domain.DestinationDataEntity)">
 <summary>
 出力するデータをセットします
 </summary>
</member>
<member name="M:Infrastructure.IHorizontalOutputBehavior.GetDestinationDataList">
 <summary>
 宛名クラスを保持するリスト
 </summary>
 <returns></returns>
</member>
<member name="T:Infrastructure.IVerticalOutputListBehavior">
 <summary>
 データのリストを縦向けに出力
 </summary>
</member>
<member name="M:Infrastructure.IVerticalOutputListBehavior.SetData(System.Int32,Domain.DestinationDataEntity)">
 <summary>
 出力するデータをセットします
 </summary>
 <param name="startrowposition"></param>
</member>
<member name="M:Infrastructure.IVerticalOutputListBehavior.GetDestinationDataList">
 <summary>
 宛名クラスを保持するリスト
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.IVerticalOutputListBehavior.GetAddressMaxLength">
 <summary>
 宛名印刷の住所の長さの限界値を返します。0は検証しません
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.IVerticalOutputListBehavior.GetLengthVerificationString(Domain.DestinationDataEntity)">
 <summary>
 長さを検証する文字列
 </summary>
 <returns></returns>
</member>
<member name="T:Infrastructure.IGravePanelListBehavior">
 <summary>
 墓地札データを出力
 </summary>
</member>
<member name="M:Infrastructure.IGravePanelListBehavior.SetData(System.Int32,Domain.GravePanelDataEntity)">
 <summary>
 出力するデータをセットします
 </summary>
 <param name="startrowposition"></param>
</member>
<member name="T:Infrastructure.IVerticalOutputBehavior">
 <summary>
 エクセルデータを縦向けに出力
 </summary>
</member>
<member name="M:Infrastructure.IVerticalOutputBehavior.CellsJoin(System.Int32)">
 <summary>
 結合するセルを設定します
 </summary>
 <param name="startrowposition"></param>
</member>
<member name="M:Infrastructure.IVerticalOutputBehavior.CriteriaCellRowIndex">
 <summary>
 必ず入力されるデータ（宛名）のセル位置を設定するための行番号
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.IVerticalOutputBehavior.CriteriaCellColumnIndex">
 <summary>
 必ず入力されるデータ（宛名）のセル位置を設定するための列番号
 </summary>
 <returns></returns>
</member>
<member name="T:Infrastructure.AddressConvert">
 <summary>
 住所変換クラス
 </summary>
</member>
<member name="M:Infrastructure.AddressConvert.GetConvertAddress1">
 <summary>
 住所の都道府県を省略できる住所は、都道府県を除いて返します
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.AddressConvert.VerifyAddressString(System.String,System.String)">
 <summary>
 検証する県、府が市と同じ名前の場合、市から始まる住所にして返します
 </summary>
 <param name="address">住所</param>
 <param name="verifystring">検証する文字列</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.AddressConvert.GetConvertAddress2">
 <summary>
 住所2の番地を漢字に変換して返します
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.AddressConvert.BranchConvertNumber(System.String)">
 <summary>
 文字列の数字を漢字に変換します。数字出ない場合は引数をそのまま返します
 </summary>
 <param name="addressString">変換文字列</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.AddressConvert.ConvertNumber(System.Int32)">
 <summary>
 数字を漢字変換して返します
 </summary>
 <param name="mynumber">変換する数字</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.AddressConvert.ConvertNumber_Under10(System.Int32)">
 <summary>
 10以下の数字を漢数字に変換します
 </summary>
 <param name="myNumber">変換する数字</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.AddressConvert.ConvertNumber_Over11Under19(System.Int32)">
 <summary>
 11から19までの数字を変換します
 </summary>
 <param name="myNumber">変換する数字</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.AddressConvert.ConvertNumber_Orver20(System.Int32)">
 <summary>
 20以上の数字を変換します
 </summary>
 <param name="myNumber">変換する数字</param>
 <returns></returns>
</member>
<member name="T:Infrastructure.ExcelOutputInfrastructure">
 <summary>
 エクセルへの処理を行います
 </summary>
</member>
<member name="P:Infrastructure.ExcelOutputInfrastructure.LogFileConecter">
 <summary>
 ログファイルを生成します
 </summary>
 <returns></returns>
</member>
<member name="F:Infrastructure.ExcelOutputInfrastructure.ProcessedCountListener">
 <summary>
 進捗を受け取るリスナー
 </summary>
</member>
<member name="F:Infrastructure.ExcelOutputInfrastructure.OverLengthAddressCountListener">
 <summary>
 住所の長いデータの数を受け取るリスナー
 </summary>
</member>
<member name="P:Infrastructure.ExcelOutputInfrastructure.OutputDataGanre">
 <summary> 
 出力するデータの種類を保持する
 </summary>
 <returns></returns>
</member>
<member name="P:Infrastructure.ExcelOutputInfrastructure.MyAddressee">
 <summary>
 宛先データ
 </summary>
</member>
<member name="F:Infrastructure.ExcelOutputInfrastructure.ExlWorkbook">
 <summary>
 ワークブック
 </summary>
</member>
<member name="F:Infrastructure.ExcelOutputInfrastructure.ColumnSizes">
 <summary>
 印刷物を発行するエクセルの列のサイズを配列で保持します。
 </summary>
</member>
<member name="F:Infrastructure.ExcelOutputInfrastructure.RowSizes">
 <summary>
 印刷物を発行するエクセルの行のサイズを配列で保持します。
 </summary>
</member>
<member name="F:Infrastructure.ExcelOutputInfrastructure.StartRowPosition">
 <summary>
 複数データを印刷する際の各入力データの一番上の数値を設定します
 </summary>
</member>
<member name="F:Infrastructure.ExcelOutputInfrastructure.ExlWorkSheet">
 <summary>
 ワークシート
 </summary>
</member>
<member name="F:Infrastructure.ExcelOutputInfrastructure.StartIndex">
 <summary>
 開始位置を決める為の基準のIndex
 </summary>
</member>
<member name="F:Infrastructure.ExcelOutputInfrastructure.buf">
 <summary>
 ファイルの位置を指定、選択します
 </summary>
</member>
<member name="F:Infrastructure.ExcelOutputInfrastructure.AddresseeList">
 <summary>
 宛先クラスを格納したリスト
 </summary>
</member>
<member name="P:Infrastructure.ExcelOutputInfrastructure.ProcessedCount">
 <summary>
 進捗のカウント
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.SheetSetting">
 <summary>
 いろいろ発行エクセルファイルを閉じて、メモリ上にClosedXMLのSheetを生成します。
 </summary>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.ExcelClose">
 <summary>
 いろいろ発行エクセルファイルを閉じます
 </summary>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.ExcelOpen">
 <summary>
 いろいろ発行エクセルファイルを開きます
 </summary>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.SetStartRowPosition(Infrastructure.IVerticalOutputBehavior)">
 <summary>
 入力するでーたの印刷範囲の一番上のRowを返します
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.SettingNewSheet_Horizontal(Infrastructure.IExcelOutputBehavior)">
 <summary>
 横向けOutput用のシートをセッティングします
 </summary>
 <param name="eob"></param>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.SettingNewSheet_Vertical(Infrastructure.IExcelOutputBehavior)">
 <summary>
 縦向けOutput用のシートをセッティングします
 </summary>
 <param name="eob"></param>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.OutputLabelProcessing(Infrastructure.IHorizontalOutputBehavior)">
 <summary>
 横向けにデータを入力する処理。ラベル用紙用
 </summary>
 <param name="_hob"></param>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.ListOutputVerticalProcessing(Infrastructure.IVerticalOutputListBehavior,System.Boolean)">
 <summary>
 縦向けにリストのデータを入力する処理
 </summary>
 <param name="_vob"></param>
 <param name="ismulti">複数印刷Behaviorをするかを設定します</param>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.NotificationOverLengthCount(System.Int32)">
 <summary>
 住所の文字列が長いデータの件数を知らせます
 </summary>
 <param name="count">件数</param>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.GravePanelListOutputProcessing(Infrastructure.IGravePanelListBehavior,System.Int32)">
 <summary>
 墓地札データリスト出力
 </summary>
 <param name="_vob"></param>
 <param name="outputPositon"></param>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.SetMargin">
 <summary>
 エクセルシートの余白を0に設定する
 </summary>
</member>
<member name="T:Infrastructure.ExcelOutputInfrastructure.GravePanel">
 <summary>
 墓地札クラス
 </summary>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.GravePanel.NameConvert(System.String)">
 <summary>
 名前の文字列の必要箇所にスペースを挿入します
 </summary>
 <param name="strName"></param>
 <returns></returns>
</member>
<member name="T:Infrastructure.ExcelOutputInfrastructure.Cho3Envelope">
 <summary>
 長3封筒クラス
 </summary>
</member>
<member name="T:Infrastructure.ExcelOutputInfrastructure.TransferPaper">
 <summary>
 振込用紙発行クラス
 </summary>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.TransferPaper.SplitYourCopyAddress(System.String,System.String)">
 <summary>
 お客様控えの住所を分けて表示させるための文字列の配列を返します
 </summary>
 <param name="address1">住所1</param>
 <param name="address2">住所2</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.TransferPaper.ReturnLongAddressArray(System.String)">
 <summary>
 長い住所を区切ります。1行目を住所2の文字も使用して3行で表示させます。
 </summary>
 <param name="absolutenessaddress"></param>
 <returns></returns>
</member>
<member name="T:Infrastructure.ExcelOutputInfrastructure.WesternEnvelope">
 <summary>
 洋封筒クラス 
 </summary>
</member>
<member name="T:Infrastructure.ExcelOutputInfrastructure.Kaku2Envelope">
 <summary>
 角2封筒クラス
 </summary>
</member>
<member name="T:Infrastructure.ExcelOutputInfrastructure.GravePamphletEnvelope">
 <summary>
 墓地パンフクラス
 </summary>
</member>
<member name="T:Infrastructure.ExcelOutputInfrastructure.Postcard">
 <summary>
 はがきクラス
 </summary>
</member>
<member name="T:Infrastructure.ExcelOutputInfrastructure.LabelSheet">
 <summary>
 ラベルシートクラス
 </summary>
</member>
<member name="M:Infrastructure.ExcelOutputInfrastructure.LabelSheet.ReturnLabelString(System.Int32,Domain.DestinationDataEntity)">
 <summary>
 ラベルに入力する文字列を返します
 </summary>
 <param name="lineindex">行番号</param>
 <param name="addressee">ラベル化する宛先</param>
 <returns></returns>
</member>
<member name="T:Infrastructure.LogFileInfrastructure">
 <summary>
 メモ帳にログを書き込みます
 </summary>
</member>
<member name="T:Infrastructure.SQLConnectInfrastructure">
 <summary>
 SQLServerと接続するモデルクラス
 </summary>
</member>
<member name="P:Infrastructure.SQLConnectInfrastructure.Cmd">
 <summary>
 データを取得するためのルートを確立するコマンドクラス
 </summary>
</member>
<member name="P:Infrastructure.SQLConnectInfrastructure.LogFileConecter">
 <summary>
 ログファイルを生成します
 </summary>
 <returns></returns>
</member>
<member name="F:Infrastructure.SQLConnectInfrastructure.SHUNJUENCONSTRING">
 <summary>
 SQLServerに接続するための接続文字列
 </summary>
</member>
<member name="P:Infrastructure.SQLConnectInfrastructure.Rs">
 <summary> 
 コマンドから取得したデータを格納するクラス
 </summary>
</member>
<member name="P:Infrastructure.SQLConnectInfrastructure.Cn">
 <summary>
 VB.NETとSQLServerを接続するクラス
 </summary>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.ExecuteStoredProcSetRecord(ADODB.Command@)">
 <summary>
 Rsにデータを格納します
 </summary>
 <param name="exeCmd">使用するストアドプロシージャ等のデータを格納したコマンド</param>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GetCompleteCmd(ADODB.Command)">
 <summary>
 Cmdのプロパティを完成させて返します
 </summary>
 <param name="execmd"></param>
 <returns></returns>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.ADONothing">
 <summary>
 ADODBのインスタンスを削除します
 </summary>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.SetLesseeRecord(System.String)">
 <summary>
 名義人データを検索します
 </summary>
 <param name="strManagementNumber">検索する管理番号</param>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.RsFields(System.String)">
 <summary>
 レコードセットのフィールドのValueを文字列形式で返します
 </summary>
 <param name="FieldName">データベース（ストアドプロシージャ）から取得するフィールドの名前</param>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GetCustomerInfo(System.String)">
 <summary>
 名義人クラスを返します
 </summary>
 <param name="customerid">検索する管理番号</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GetAddress(System.String)">
 <summary>
 住所を検索します
 </summary>
 <param name="postalcode">検索する郵便番号</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GetAddressList(System.String)">
 <summary>
 住所欄の文字列を使って住所検索し、該当する住所をリストにして返します
 </summary>
 <param name="address">検索する住所</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GetLastSaveDate">
 <summary>
 春秋苑システムデータの最終更新日を取得します
 </summary>
 <returns></returns>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.SetGraveData(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 墓地番号データをRsに格納します
 </summary>
 <param name="Ku">区</param>
 <param name="Kuiki">区域</param>
 <param name="Gawa">側</param>
 <param name="Ban">番</param>
 <param name="Edaban">枝番</param>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GetKuikiList(System.String)">
 <summary>
 墓地の区に属する区域のリストを返します
 </summary>
 <param name="_gravekunumber">区</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GetGawaList(System.String,System.String)">
 <summary>
 墓地の区、区域に属する側のリストを返します
 </summary>
 <param name="_gravekunumber">区</param>
 <param name="_gravekuikinumber">区域</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GetBanList(System.String,System.String,System.String)">
 <summary>
 墓地の側に属する番のリストを返します
 </summary>
 <param name="_gravekunumber">区</param>
 <param name="_gravekuikinumber">区域</param>
 <param name="_gravegawanumber">側</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GetEdabanList(System.String,System.String,System.String,System.String)">
 <summary>
 墓地の番に属する枝番のリストを返します
 </summary>
 <param name="_gravekunumber">区</param>
 <param name="_gravekuikinumber">区域</param>
 <param name="_gravegawanumber">側</param>
 <param name="_gravebannumber">番</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GetCustomerInfo_GraveNumber(System.String,System.String,System.String,System.String,System.String)">
 <summary>
 墓地番号から、名義人情報を取得します
 </summary>
 <param name="_gravekunumber">区</param>
 <param name="_gravekuikinumber">区域</param>
 <param name="_gravegawanumber">側</param>
 <param name="_gravebannumber">番</param>
 <param name="_graveedabannumber">枝番</param>
 <returns></returns>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GravePanelRegistration(Domain.GravePanelDataEntity)">
 <summary>
 墓地札データ登録
 </summary>
 <param name="_gravepaneldata">登録墓地札データ</param>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GetGravePanelDataList(System.String,System.String,System.DateTime,System.DateTime,System.DateTime,System.DateTime)">
 <summary>
 墓地札データの一覧を取得し、リストで返します
 </summary>
 <param name="customerid">管理番号</param>
 <param name="fullname">申込者名</param>
 <param name="registrationdate_st">登録日の始め</param>
 <param name="registrationdate_en">登録日</param>
 <param name="outputdate_st"></param>
 <param name="outputdate_en"></param>
 <returns></returns>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GravePanelDeletion(Domain.GravePanelDataEntity)">
 <summary>
 墓地札データを削除します
 </summary>
 <param name="_gravepaneldata"></param>
</member>
<member name="M:Infrastructure.SQLConnectInfrastructure.GravePanelUpdate(Domain.GravePanelDataEntity)">
 <summary>
 墓地札データを更新します
 </summary>
 <param name="_gravepaneldata"></param>
</member>
</members>
</doc>
