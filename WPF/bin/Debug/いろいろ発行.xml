<?xml version="1.0"?>
<doc>
<assembly>
<name>
いろいろ発行
</name>
</assembly>
<members>
<member name="T:WPF.My.MyWpfExtension">
 <summary>
 WPF のマイ名前空間で使用できるプロパティを定義するためのモジュール
 </summary>
 <remarks></remarks>
</member>
<member name="P:WPF.My.MyWpfExtension.Application">
 <summary>
 実行中のアプリケーション用のアプリケーション オブジェクトを返します
 </summary>
</member>
<member name="P:WPF.My.MyWpfExtension.Computer">
 <summary>
 ホスト コンピューターに関する情報を返します。
 </summary>
</member>
<member name="P:WPF.My.MyWpfExtension.User">
 <summary>
 現在のユーザーに関する情報を返します。現在の
 Windows ユーザー資格情報でアプリケーションを実行する場合は、My.User.InitializeWithWindowsUser() を呼び出してください。
 </summary>
</member>
<member name="P:WPF.My.MyWpfExtension.Log">
 <summary>
 アプリケーション ログを返します。リスナーは、アプリケーションの構成ファイルを使用して構成できます。
 </summary>
</member>
<member name="P:WPF.My.MyWpfExtension.Windows">
 <summary>
 プロジェクトで定義されている Windows の集合を返します。
 </summary>
</member>
<member name="T:WPF.My.Resources.Resources">
<summary>
  ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.ResourceManager">
<summary>
  このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.Culture">
<summary>
  すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
  現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.AddComplete">
<summary>
  登録しました に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.AddCompleteTitle">
<summary>
  登録完了 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.AddHomeString">
<summary>
   家 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.AddresseeErrorInfo">
<summary>
  宛先が不十分です に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.AddressLengthOverInfo">
<summary>
  住所がセルからはみ出てますので、書き直して下さい に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.AddressLengthOverInfo_CellYellow">
<summary>
  セルを黄色で表示していますので、検索し、修正して下さい。 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.AddressLengthOverInfo_Multi1">
<summary>
  住所の長いデータが  に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.AddressLengthOverInfo_Multi2">
<summary>
   件あります。 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.AreaFieldError">
<summary>
  面積が正しく入力されていません に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.Cho3EnvelopeText">
<summary>
  長3封筒 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.ClipBoardDataErrorInfo">
<summary>
  コピー形式が正しくありません。 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.CompleteDeleteInfo">
<summary>
  削除しました に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.CompleteDeleteInfoTitle">
<summary>
  削除完了 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.ConfirmationRegisterInfo">
<summary>
  登録しますか？ に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.ConfirmationRegisterInfoTitle">
<summary>
  登録確認 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.CustomerIDLengthError">
<summary>
  6桁の管理番号を入力 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.DataSelectInfo">
<summary>
  どちらのデータを使用しますか？ に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.DataSelectInfoTitle">
<summary>
  データ選択 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.DefaultDate">
<summary>
  1900/01/01 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.DeleteInfo">
<summary>
  削除しますか？ に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.DeleteInfoTitle">
<summary>
  削除確認 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.ErrorRegisterTitle">
<summary>
  登録エラー に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.FieldPropertyMessage_Lessee">
<summary>
  名義人 :  に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.FieldPropertyMessage_Receiver">
<summary>
  送付先 :  に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.FormatErrorTitle">
<summary>
  形式エラー に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.GraveBanString">
<summary>
  番 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.GraveGawaString">
<summary>
  側 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.GraveKuString">
<summary>
  区 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.GravePamphletEnvelopeText">
<summary>
  墓地パンフ に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.HonorificsText">
<summary>
  様 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.Kaku2EnvelopeText">
<summary>
  角2封筒 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.LabelPaperText">
<summary>
  ラベル用紙 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.LesseeDataSelect">
<summary>
  はい ⇒　名義人　　いいえ ⇒ 送付先 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.MandatoryItemsNotPreparedTitle">
<summary>
  必須項目不備 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.MoneyInputError">
<summary>
  金額は半角数字で入力してください に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.NoAddressItemCloseInfo">
<summary>
  アイテムが選択されないまま画面を閉じます。 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.NothingSelectedItemMessage">
<summary>
  アイテムが選択されていません に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.OutputInfo">
<summary>
  チェックの入った墓地札データをエクセルに出力しました に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.OutputInfo_Count0">
<summary>
  印刷するアイテムがありません。印刷フラグにチェックを入れるか、墓地札を追加してください に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.OutputInfoTitle">
<summary>
  出力結果 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.PassAddresseeRecordInfo">
<summary>
  宛名、郵便番号、住所、番地の順で作ったリストをコピーしてください。次のレコードに進みます。 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.PostalCodeError">
<summary>
  半角数字、ハイフンあり（***-****）で入力してください に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.PostcardText">
<summary>
  はがき に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.SlashClipSpace">
<summary>
   /  に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.SquareFootageText">
<summary>
   ㎡ に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.StringEmptyMessage">
<summary>
  必須項目です。必ず入力してください に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.ToBeAdjusted">
<summary>
  要住所調整 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.TransferPaperText">
<summary>
  振込用紙 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.UndefinedCustomerID">
<summary>
  未登録 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="P:WPF.My.Resources.Resources.WesternEnvelopeText">
<summary>
  洋封筒 に類似しているローカライズされた文字列を検索します。
</summary>
</member>
<member name="T:WPF.ShowFormData">
 <summary>
 フォームデータを保持するクラス
 </summary>
</member>
<member name="T:WPF.ViewModels.BaseViewModel">
 <summary>
 ビューモデルの基本クラス
 </summary>
</member>
<member name="P:WPF.ViewModels.BaseViewModel.InputErrorString">
 <summary>
 エラーメッセージ
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.BaseViewModel.CallShowForm">
 <summary>
 フォームを呼び出すタイミングを管理します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.BaseViewModel.ShowFormCommand">
 <summary>
 フォームを呼び出すコマンド
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.BaseViewModel.CallPropertyChanged">
 <summary>
 プロパティの値が変わったことを知らせるイベントを発生させます
 </summary>
</member>
<member name="M:WPF.ViewModels.BaseViewModel.CallPropertyChanged(System.String)">
 <summary>
 プロパティの値が変わったことを知らせるイベントを発生させます
 </summary>
</member>
<member name="M:WPF.ViewModels.BaseViewModel.ValidateProperty(System.String,System.Object)">
 <summary>
 エラーを管理するメソッド
 </summary>
 <param name="propertyName">プロパティ名</param>
 <param name="value">プロパティの値</param>
</member>
<member name="F:WPF.ViewModels.BaseViewModel._currentErrors">
 <summary>
 エラーメッセージを保持するディクショナリ
 </summary>
</member>
<member name="M:WPF.ViewModels.BaseViewModel.AddError(System.String,System.String)">
 <summary>
 エラーメッセージをディクショナリに追加します
 </summary>
 <param name="propertyName">プロパティ名</param>
 <param name="_error">エラーメッセージ</param>
</member>
<member name="M:WPF.ViewModels.BaseViewModel.RemoveError(System.String)">
 <summary>
 エラーを削除します
 </summary>
 <param name="propertyName">プロパティ名</param>
</member>
<member name="M:WPF.ViewModels.BaseViewModel.OnErrorsChanged(System.String)">
 <summary>
 エラーが発生、または解消されたことを知らせるイベントを発生させます
 </summary>
 <param name="propertyName"></param>
</member>
<member name="M:WPF.ViewModels.BaseViewModel.GetErrors(System.String)">
 <summary>
 エラーメッセージを取得します
 </summary>
 <param name="propertyName">プロパティ名</param>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.BaseViewModel.HasErrors">
 <summary>
 現在エラーがあるかどうかを判断し、あればTrueを返します
 </summary>
 <returns></returns>
</member>
<member name="T:WPF.ViewModels.CreateGravePanelDataViewModel">
 <summary>
 墓地札登録画面ViewModel 
 </summary>
</member>
<member name="F:WPF.ViewModels.CreateGravePanelDataViewModel.Listener">
 <summary>
 墓地札追加通知を受け取るリスナー
 </summary>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.SelectAddresseeInfo">
 <summary>
 名義人か送付先どちらかを選ばせるメッセージボックス表示コマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.ConfirmationRegistraterInfo">
 <summary>
登録確認メッセージボックス表示コマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.CompleteRegistrationInfo">
 <summary>
 登録完了メッセージボックス表示コマンド
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.AddListAddListener(WPF.INotifyListAdd)">
 <summary>
 墓地札追加通知を受け取るリスナーを設定します
 </summary>
 <param name="_listener"></param>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.ReferenceGraveNumberCommand">
 <summary>
 墓地番号検索コマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.MessageInfo">
 <summary>
 メッセージボックスプロパティを保持します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.FullName">
 <summary>
 申込者名
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.RegistraterCustomerID">
 <summary>
 登録する管理番号
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.KuField">
 <summary>
 墓地番号「区」
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.CallCompleteRegistration">
 <summary>
 登録完了メッセージボックスを呼び出します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.IsConfirmationRegister">
 <summary>
 登録確認メッセージボックスを呼び出します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.GravePanelDataRegistration">
 <summary>
 墓地札登録コマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.ContractContent">
 <summary>
 契約内容
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.ContractContents">
 <summary>
 契約内容リスト
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.KuText">
 <summary>
 墓地番号「区」
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.DisplayForGraveNumber">
 <summary>
 表示用墓地番号
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.MsgResult">
 <summary>
 メッセージボックスから受け取る結果の値
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.MyLessee">
 <summary>
 名義人クラス
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.CallSelectAddresseeInfo">
 <summary>
 名義人データと、送付先データのどちらを使用するか選択するメッセージボックスを呼び出します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.Area">
 <summary>
 面積
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.FamilyName">
 <summary>
 苗字
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.CustomerID">
 <summary>
 管理番号
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.SetLesseeData">
 <summary>
 墓地番号を基に名義人クラスを生成してプロパティにセットします
 </summary>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.InputLesseeData">
 <summary>
 名義人クラスのプロパティをViewModel のプロパティにセットします
 </summary>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.SetLesseeName">
 <summary>
 名義人名、名義人名の苗字のみをセットします
 </summary>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.CreateSelectAddresseeInfo">
 <summary>
 名義人データと送付先のどちらを使用するかの確認メッセージボックスを生成します
 </summary>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.EdabanText">
 <summary>
 枝番　
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.BanText">
 <summary>
 番
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.GawaText">
 <summary>
 側
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.KuikiText">
 <summary>
 区域
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.GraveNumberKuList">
 <summary>
 墓地番号　区リスト
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.GraveNumberBanList">
 <summary>
 墓地番号　番リスト
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.GraveNumberGawaList">
 <summary>
 墓地番号　側リスト
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.GraveNumberKuikiList">
 <summary>
 墓地番号　区域リスト
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.GraveNumberEdabanList">
 <summary>
 墓地番号　枝番リスト
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.AddGraveKu(System.String)">
 <summary>
 墓地番号の区をリストに格納します
 </summary>
 <param name="originalvalue"></param>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.SelectedEdaban">
 <summary>
 選択された枝番
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.SelectedBan">
 <summary>
 選択された番
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.SelectedGawa">
 <summary>
 選択された側
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.SelectedKuiki">
 <summary>
 選択された区域
 </summary>
 <returns></returns>
</member>
<member name="T:WPF.ViewModels.CreateGravePanelDataViewModel.GravenumberGanre">
 <summary>
 墓地番号のパーツ
 </summary>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.SetNextGraveNumberField(WPF.ViewModels.CreateGravePanelDataViewModel.GravenumberGanre,System.String)">
 <summary>
 墓地番号パーツ（区、区域、側、番、枝番）の指定したリストを呼び出します。
 </summary>
 <param name="nextganre">呼び出す墓地番号パーツ</param>
 <param name="numbervalue">基になる墓地番号パーツ</param>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.SelectedKu">
 <summary>
 選択された区
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.IsEnabledEdaban">
 <summary>
 枝番のEnableを設定します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.IsEnabledBan">
 <summary>
 番のEnableを設定します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.IsEnabledGawa">
 <summary>
 側のEnableを設定します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.IsEnabledKuiki">
 <summary>
 区域のEnableを設定します
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.ReferenceLesseeData">
 <summary>
 管理番号を使用して名義人データを呼び出し、各プロパティに格納します
 </summary>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.RegistrationData">
 <summary>
 墓地札データを登録します
 </summary>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.CallRegistrationErrorMessageInfo">
 <summary>
 登録する際のエラーメッセージを出すタイミングを管理します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.CreateGravePanelDataViewModel.RegistrationErrorMessageInfo">
 <summary>
 登録する際のエラーメッセージを生成するコマンド
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.CreateCompleteRegistrationInfo">
 <summary>
 登録完了メッセージを生成します
 </summary>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.DataClear">
 <summary>
 プロパティの値をクリアします
 </summary>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.CreateConfirmationRegisterInfo">
 <summary>
 登録確認メッセージを生成します
 </summary>
</member>
<member name="M:WPF.ViewModels.CreateGravePanelDataViewModel.SetValiDateProperty_StringEmptyMessage(System.String,System.Object)">
 <summary>
 文字列が空なことをエラー通知します
 </summary>
 <param name="propertyName"></param>
 <param name="value"></param>
</member>
<member name="T:WPF.ViewModels.GravePanelDataViewModel">
 <summary>
 墓地札データリスト画面ViewModel 
 </summary>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.DeletedGravePanelInfo">
 <summary>
 墓地データを削除したことをメッセージで知らせるコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.ContractContents">
 <summary>
 契約内容のリスト
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.FullName">
 <summary>
 申込者名
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.FamilyName">
 <summary>
 苗字
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.CustomerID">
 <summary>
 管理番号
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.OutputGravePanelCommand">
 <summary>
 墓地札データOutputコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.RegistrationTime">
 <summary>
 登録日時
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.CallCompletedDeleteGravePanelDataInfo">
 <summary>
 データ削除確認メッセージを表示させるBool
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.DeleteGravePanelDataCommand">
 <summary>
 墓地札データを削除するコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.OutputPosition">
 <summary>
 出力する位置を1～3までで設定します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.IsPast3MonthsPart">
 <summary>
 過去3か月分のみ表示するかのチェック
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.GotoCreateGravePanelDataView">
 <summary>
 新規データ作成画面に遷移します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.MyGravePanel">
 <summary>
 墓地札クラス
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.GravePanelDataViewModel.UpdateIsPrintoutValue">
 <summary>
 印刷フラグに対する日付を管理します
 </summary>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.GravePanelList">
 <summary>
 墓地札リストクラス
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.IsNewRecordOnly">
 <summary>
 新規墓地札のみリストに表示するかのチェック
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.GravePanelDataViewModel.GetList">
 <summary>
 データベースから墓地札データを取得し、リストに格納します
 </summary>
</member>
<member name="M:WPF.ViewModels.GravePanelDataViewModel.DeleteGravePanelData">
 <summary>
 墓地札データ削除
 </summary>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.IsDeleteDataInfoCommand">
 <summary>
 墓地札データ削除確認メッセージコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.CallIsDeleteDataInfo">
 <summary>
 墓地札データ削除確認コマンドを呼び出すタイミングを管理します
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.GravePanelDataViewModel.CreateIsDeleteDataInfo_ReturnAnswer">
 <summary>
 墓地札データ削除確認メッセージボックスを呼び出し、その結果を返します
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.GravePanelDataViewModel.MyGravePanelDataDetailString">
 <summary>
 墓地札データの項目を並べた文字列を返します
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.GravePanelDataViewModel.CreateDeletedItemInfo">
 <summary>
 墓地札データ削除完了メッセージを生成します
 </summary>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.OutputInfoCommand">
 <summary>
 墓地札データ出力コマンド
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.GravePanelDataViewModel.Output">
 <summary>
 リストの墓地札データを出力します
 </summary>
</member>
<member name="P:WPF.ViewModels.GravePanelDataViewModel.CallOutputInfo">
 <summary>
 出力確認メッセージボックスを呼び出すタイミングを管理します
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.GravePanelDataViewModel.OutputInfo(System.String,System.String,System.Windows.MessageBoxImage)">
 <summary>
 出力確認メッセージボックスを生成します
 </summary>
 <param name="msg">メッセージ</param>
 <param name="title">タイトル</param>
 <param name="image">メッセージボックスの種類</param>
</member>
<member name="T:WPF.ViewModels.MultiAddresseeDataViewModel">
 <summary>
 複数印刷画面ビューモデル
 </summary>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.OverLengthAddressCount">
 <summary>
 住所の長いデータの件数
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.Addressee">
 <summary>
 宛名
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.IsOutputEnabled">
 <summary>
 出力ボタンのEnableを管理します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.ProgressListCount">
 <summary>
 処理数
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.ProcessedCount">
 <summary>
 進捗カウント
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.ProgressText">
 <summary>
 進捗メニューに表示するカウント
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.ProgressVisiblity">
 <summary>
 進捗メニューを可視化を管理します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.ReferenceAddressListCommand">
 <summary>
 住所で検索するコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.ReferenceAddressCommand">
 <summary>
 郵便番号で検索するコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.Address2">
 <summary>
 住所2
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.Postalcode">
 <summary>
 郵便番号
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.ReferenceAddress">
 <summary>
 住所を検索します
 </summary>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.Address1">
 <summary>
 住所1
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.ReferenceAddress_Postalcode">
 <summary>
 郵便番号での住所検索
 </summary>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.CallErrorMessageInfo">
 <summary>
 エラーメッセージを呼び出すBool
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.ErrorMessageInfo">
 <summary>
 エラーメッセージを格納します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.IsShowInTaskBer">
 <summary>
 タスクバーにアプリを載せるかのBool。複数のViewをまとめて1つのアイコンにして、クリックしたら一番前面のViewが表示されるようにしたい
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.DataOutputCommand">
 <summary>
 AddresseeListを出力します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.SelectedOutputContentsValue">
 <summary>
 選択している印刷物の種類
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.OutputContentsDictionary">
 <summary>
 印刷する種類を保持しているディクショナリ
 </summary>
 <returns></returns>
</member>
<member name="T:WPF.ViewModels.MultiAddresseeDataViewModel.OutputContents">
 <summary>
 出力する印刷物の種類の列挙型
 </summary>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.ReturnListCommand">
 <summary>
 コピーした宛先リストをビューに表示するコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.ReturnList_CustomerIDCommand">
 <summary>
 コピーした管理番号を基にリストを返すコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.DeleteItemCommand">
 <summary>
 リストのアイテムを削除します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.MyAddressee">
 <summary>
 リストに表示する宛先クラス
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.InputLessee">
 <summary>
 リストに表示する名義人クラス
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.CustomerID">
 <summary>
 管理番号
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.Title">
 <summary>
 敬称
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.AddresseeList">
 <summary>
 データバインド用リスト
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.#ctor(Domain.IDataConectRepogitory,Domain.IOutputDataRepogitory)">
 <summary>
 各種リポジトリを設定します
 </summary>
 <param name="lesseerepository">名義人データ</param>
 <param name="excelrepository">エクセルデータ</param>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.ReferenceLesseeCommand">
 <summary>
 名義人検索コマンド
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.ReferenceLessee(System.String)">
 <summary>
 名義人検索
 </summary>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.CallSelectAddresseeInfo">
 <summary>
 名義人と送付先のどちらを使用するかのメッセージを表示するタイミングを管理します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.MultiAddresseeDataViewModel.SelectAddresseeInfo">
 <summary>
 名義人と送付先のどちらを使用するかのメッセージを表示するコマンド
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.CreateSelectAddresseeInfo(Domain.LesseeCustomerInfoEntity)">
 <summary>
 名義人と送付先のどちらを使用するかのメッセージを表示するコマンドを生成します
 </summary>
 <param name="lse">名義人データ</param>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.SetReceiverProperty(Domain.LesseeCustomerInfoEntity)">
 <summary>
 送付先情報をプロパティにセットします
 </summary>
 <param name="mylessee">名義人データ</param>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.SetLesseeProperty(Domain.LesseeCustomerInfoEntity)">
 <summary>
 名義人情報をプロパティにセットします
 </summary>
 <param name="mylessee">名義人データ</param>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.AddItem">
 <summary>
 リストに追加します
 </summary>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.ReturnList">
 <summary>
 クリップボードのデータを基にリスト表示するアイテムを格納したリストを返します
 </summary>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.CreateErrorMessageInfo">
 <summary>
 エラーメッセージを生成します
 </summary>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.ReturnList_CustomerID">
 <summary>
 管理番号の列を格納したクリップボードを使用してリスト表示するアイテムを格納したリストを返します
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.OutputList_Cho3Envelope">
 <summary>
 長3封筒印刷
 </summary>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.OutputList_GravePamphletEnvelope">
 <summary>
 墓地パンフ印刷
 </summary>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.OutputList_Kaku2Envelope">
 <summary>
 角2封筒印刷
 </summary>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.OutputList_Postcard">
 <summary>
 ハガキ印刷
 </summary>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.OutputList_WesternEnvelope">
 <summary>
 洋封筒印刷
 </summary>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.OutputList_LabelSheet">
 <summary>
 ラベル用紙印刷
 </summary>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.DeleteItem">
 <summary>
 リストの行を削除します
 </summary>
</member>
<member name="M:WPF.ViewModels.MultiAddresseeDataViewModel.Output">
 <summary>
 印刷物を出力します
 </summary>
</member>
<member name="T:WPF.ViewModels.IAddressDataViewCloseListener">
 <summary>
 住所データをリスナーに渡します
 </summary>
</member>
<member name="T:WPF.ViewModels.AddressDataViewModel">
 <summary>
 住所一覧画面ビューモデル
 </summary>
</member>
<member name="P:WPF.ViewModels.AddressDataViewModel.SetAddressDataCommand">
 <summary>
 住所データをリスナーに渡すコマンド
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.AddressDataViewModel.AddListener(WPF.ViewModels.IAddressDataViewCloseListener)">
 <summary>
 リスナー登録
 </summary>
 <param name="_listener"></param>
</member>
<member name="P:WPF.ViewModels.AddressDataViewModel.Postalcode">
 <summary>
 郵便番号
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.AddressDataViewModel.Address">
 <summary>
 住所
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.AddressDataViewModel.MyAddressList">
 <summary>
 住所データリスト
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.AddressDataViewModel.ReturnData">
 <summary>
 リスナーに住所データを渡す
 </summary>
</member>
<member name="T:WPF.ViewModels.SingleAddresseeDataViewModel">
 <summary>
 メインフォームに情報を渡すビューモデルクラス
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.AddressOverLengthInfo">
 <summary>
 住所が長い方に注意を促すメッセージコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.SelectAddresseeInfo">
 <summary>
 名義人と送付先のどちらのデータを使用するかを選択させるメッセージコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.ErrorMessageInfo">
 <summary>
 エラーメッセージを表示するコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.CallGravePanelDataView">
 <summary>
 墓地札管理画面を呼び出すタイミングを管理します
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.CallAddressOverLengthMessage">
 <summary>
 住所が長い時に注意を促すメッセージを表示させるBool
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.CallErrorMessage">
 <summary>
 エラーメッセージを表示させるBool
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.CallSelectAddresseeInfo">
 <summary>
 名義人と送付先のどちらを使用するかのメッセージを表示させるBool
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.SelectedOutputContentsValue">
 <summary>
 印刷する種類を保持します
 </summary>
 <returns></returns>
</member>
<member name="T:WPF.ViewModels.SingleAddresseeDataViewModel.OutputContents">
 <summary>
 保持する印刷種類
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.OutputContentsDictionary">
 <summary>
 印刷する種類を保持しているディクショナリ
 </summary>
 <returns></returns>
</member>
<member name="F:WPF.ViewModels.SingleAddresseeDataViewModel.DataBaseConecter">
 <summary>
 名義人情報を保持するリポジトリ
 </summary>
</member>
<member name="F:WPF.ViewModels.SingleAddresseeDataViewModel.DataOutputConecter">
 <summary>
 印刷等のデータを保持するリポジトリ
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.GotoGravePanelDataView">
 <summary>
 墓地札画面に移動するコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.GotoMultiAddresseeDataView">
 <summary>
 一括出力画面に移動するコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.DataOutput">
 <summary>
 データをOutputするコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.NoteClear">
 <summary>
 備考欄を空欄にするコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.AddressReference">
 <summary>
 住所で検索をかけるコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.PostalcodeReference">
 <summary>
 郵便番号で検索をかけるコマンド
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.ReferenceLesseeCommand">
 <summary>
 名義人データ検索コマンド
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.LastSaveDate">
 <summary>
 春秋苑データ最終更新日
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.PermitReference">
 <summary>
 検索許可
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.CustomerID">
 <summary>
 管理番号
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.MultiOutputCheck">
 <summary>
 続けて入力する時に、既存のデータを消さずに次のデータを出力するかのチェック
 </summary>
 <returns></returns>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.AddresseeName">
 <summary>
 宛名
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.Title">
 <summary>
 敬称
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.PostalCode">
 <summary>
 郵便番号
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.Address1">
 <summary>
 住所1（郵便番号が有効な部分）
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.Address2">
 <summary>
 住所2（郵便番号が無効な番地等の部分）
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.Note1">
 <summary>
 備考1
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.Note2">
 <summary>
 備考2
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.Note3">
 <summary>
 備考3
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.Note4">
 <summary>
 備考4
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.Note5">
 <summary>
 備考5
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.Money">
 <summary>
 金額
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.TransferPaperMenuEnabled">
 <summary>
 振込用紙独自の欄のEnableを保持します
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.#ctor">
 <summary>
 各種リポジトリを設定します
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.#ctor(Domain.IDataConectRepogitory,Domain.IOutputDataRepogitory)">
 <param name="lesseerepository">名義人データ</param>
 <param name="excelrepository">エクセルデータ</param>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.ReferenceLessee">
 <summary>
 渡された管理番号で、名義人データを生成します。
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.GetAddress(System.String)">
 <summary>
 郵便番号を使用して、住所を検索する
 </summary>
 <param name="postalcode">郵便番号</param>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.InputTransferData">
 <summary>
 振込用紙
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.InputCho3Envelope">
 <summary>
 長3封筒
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.InputWesternEnvelope">
 <summary>
 洋封筒
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.InputGravePamphletEnvelope">
 <summary>
 墓地パンフ
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.InputKaku2Envelope">
 <summary>
 角２封筒
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.InputPostcard">
 <summary>
 はがき
 </summary>
</member>
<member name="P:WPF.ViewModels.SingleAddresseeDataViewModel.CallShowAddressDataView">
 <summary>
 住所リストを表示するタイミングを管理します
 </summary>
 <returns></returns>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.ReferenceAddress">
 <summary>
 住所を検索します
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.ReferenceAddress_Postalcode">
 <summary>
 郵便番号で住所を検索します
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.SetDefaultValue">
 <summary>
 プロパティを初期化する
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.CreateErrorMessage">
 <summary>
 エラーメッセージを生成します
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.AddressDataNotify(System.String,System.String)">
 <summary>
 住所検索で、帰ってきたデータを格納します
 </summary>
 <param name="_postalcode"></param>
 <param name="_address"></param>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.NoteTextClear">
 <summary>
 備考を空欄にする
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.Output">
 <summary>
 宛名データを出力します
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.TransferPaperMenuEnabledChange">
 <summary>
 振込用紙の独自の欄のEnableを変えます
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.ShowMultiAddresseeDataView">
 <summary>
 一括出力画面を表示します。
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.ShowGravePanelDataView">
 <summary>
 墓地札リスト画面を開きます。要コード検証　
 </summary>
</member>
<member name="M:WPF.ViewModels.SingleAddresseeDataViewModel.CreateSelectAddresseeInfo">
 <summary>
 名義人と送付先のどちらを使用するかのメッセージを生成します
 </summary>
</member>
<member name="T:WPF.Behaviors.MessageBoxBehavior">
 <summary>
 メッセージボックスを呼び出します
 </summary>
</member>
<member name="T:WPF.Behaviors.ShowDialogBehavior">
 <summary>
 フォームを呼び出します
 </summary>
</member>
<member name="T:WPF.Command.DelegateCommand`1">
 <summary>
 デリゲートコマンド
 </summary>
 <typeparam name="T"></typeparam>
</member>
<member name="M:WPF.Command.DelegateCommand`1.#ctor(System.Action{`0},System.Func{System.Boolean})">
 <summary>コマンド実装</summary>
 <param name="execute">実行メソッド</param>
 <param name="canExecute">実行メソッド処理許可</param>
</member>
<member name="T:WPF.Command.DelegateCommand">
 <summary>コマンド実装</summary>
</member>
<member name="E:WPF.Command.DelegateCommand.CanExecuteChanged">
 <summary>CanExecute変更イベント</summary>
</member>
<member name="F:WPF.Command.DelegateCommand._Execute">
 <summary>実行メソッド</summary>
</member>
<member name="F:WPF.Command.DelegateCommand._CanExecute">
 <summary>実行メソッド処理許可</summary>
</member>
<member name="M:WPF.Command.DelegateCommand.#ctor(System.Action,System.Func{System.Boolean})">
 <summary>コマンド実装</summary>
 <param name="execute">実行メソッド</param>
 <param name="canExecute">実行メソッド処理許可</param>
</member>
<member name="M:WPF.Command.DelegateCommand.CanExecute">
 <summary>コマンドが実行可能か決定する</summary>
</member>
<member name="M:WPF.Command.DelegateCommand.CanExecute(System.Object)">
 <summary>コマンドが実行可能か決定する</summary>
 <param name="parameter">パラメータ</param>
</member>
<member name="M:WPF.Command.DelegateCommand.Execute">
 <summary>コマンド実行</summary>
</member>
<member name="M:WPF.Command.DelegateCommand.Execute(System.Object)">
 <summary>コマンド実行</summary>
 <param name="parameter">パラメータ</param>
</member>
<member name="T:WPF.INotifyListAdd">
 <summary> 
 墓地札データが追加されたことを通知します
 </summary>
</member>
<member name="T:WPF.CreateGravePanelDataView">
<summary>
CreateGravePanelDataView
</summary>
</member>
<member name="M:WPF.CreateGravePanelDataView.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="T:WPF.GravePanelDataView">
<summary>
GravePanelDataView
</summary>
</member>
<member name="M:WPF.GravePanelDataView.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="T:WPF.Data.MessageBoxInfo">
 <summary>
 メッセージボックスの値を保持するクラス
 </summary>
</member>
<member name="T:WPF.MultiAddresseeDataView">
<summary>
MultiAddresseeDataView
</summary>
</member>
<member name="M:WPF.MultiAddresseeDataView.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="T:WPF.Plactice">
<summary>
Plactice
</summary>
</member>
<member name="M:WPF.Plactice.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="T:WPF.MainWindow">
<summary>
MainWindow
</summary>
</member>
<member name="M:WPF.MainWindow.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="T:WPF.Application">
<summary>
Application
</summary>
</member>
<member name="M:WPF.Application.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="M:WPF.Application.Main">
<summary>
Application Entry Point.
</summary>
</member>
<member name="T:WPF.AddressDataView">
<summary>
AddressDataView
</summary>
</member>
<member name="M:WPF.AddressDataView.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
</members>
</doc>
